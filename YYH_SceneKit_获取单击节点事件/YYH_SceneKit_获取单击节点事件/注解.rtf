{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fnil\fcharset134 PingFangSC-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \'c8\'e7\'ba\'ce\'bb\'f1\'c8\'a1\'b5\'a5\'bb\'f7\'bd\'da\'b5\'e3\'ca\'c2\'bc\'fe
\f1 \
\

\f0 \'b1\'be\'bd\'da\'d1\'a7\'cf\'b0\'c4\'bf\'b1\'ea
\f1 \

\f0 \'d5\'c6\'ce\'d5\'c8\'e7\'ba\'ce\'bb\'f1\'c8\'a1\'d3\'c3\'bb\'a7\'b5\'a5\'bb\'fa\'bd\'da\'b5\'e3\'b5\'c4\'ca\'b1\'bc\'e4
\f1 \
\

\f0 \'cf\'c8\'c8\'cf\'ca\'b6\'d2\'bb\'b8\'f6\'b7\'bd\'b7\'a8
\f1 ,
\f0 \'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'d4\'da
\f1 SCNView 
\f0 \'c0\'ef\'c3\'e6
\f1 \
\
  public func hitTest(_ point: CGPoint, options: [SCNHitTestOption : Any]? = nil) -> [SCNHitTestResult]\

\f0 \'b5\'b1\'ce\'d2\'c3\'c7\'ca\'d6\'b5\'e3\'bb\'f7\'c6\'c1\'c4\'bb\'ca\'b1
\f1 ,
\f0 \'d2\'aa\'d6\'aa\'b5\'c0\'ce\'d2\'c3\'c7\'b6\'bc\'b5\'e3\'b5\'bd\'c1\'cb\'c4\'c7\'d0\'a9\'bd\'da\'b5\'e3
\f1 ,
\f0 \'ce\'d2\'c3\'c7\'d3\'a6\'b8\'c3\'d4\'f5\'c3\'b4\'b4\'a6\'c0\'ed\'c4\'d8\'a3\'bf
\f1 \
\

\f0 \'ca\'d7\'cf\'c8\'ce\'d2\'c3\'c7\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6\'ca\'d6\'ca\'c6\'b5\'bd\'ca\'d3\'cd\'bc\'d6\'d0\'c8\'a5
\f1 \
\
let tap = UITapGestureRecognizer(target: self, action: #selector(tapHandle(gesture:)))\
scnView.addGestureRecognizer(tap)\

\f0 \'c8\'bb\'ba\'f3\'a3\'ac\'ce\'d2\'c3\'c7\'bb\'f1\'c8\'a1\'b5\'e3\'bb\'f7\'b5\'bd\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'bd\'da\'b5\'e3
\f1 \
\
func tapHandle(gesture:UITapGestureRecognizer)\{\
    let results:[SCNHitTestResult] = (self.scnView?.hitTest(gesture.location(ofTouch: 0, in: self.scnView), options: nil))!\
    guard let firstNode  = results.first else\{\
        return\
    \}\
    // 
\f0 \'b5\'e3\'bb\'f7\'b5\'bd\'b5\'c4\'bd\'da\'b5\'e3
\f1 \
    print(firstNode.node)\
\}\

\f0 \'c8\'cf\'ca\'b6\'c0\'e0
\f1 SCNHitTestResult\
     open class SCNHitTestResult : NSObject \{\
\
/// 
\f0 \'bb\'f7\'d6\'d0\'b5\'c4\'bc\'b8\'b5\'e3
\f1 \
open var node: SCNNode \{ get \}\
\
/// 
\f0 \'bb\'f7\'d6\'d0\'b5\'c4\'bc\'b8\'ba\'ce\'cc\'e5\'cb\'f7\'d2\'fd
\f1 \
open var geometryIndex: Int \{ get \}\
\
/// 
\f0 \'bb\'f7\'d6\'d0\'b5\'c4\'c3\'e6\'b5\'c4\'cb\'f7\'d2\'fd
\f1 \
open var faceIndex: Int \{ get \}\
\
 /// 
\f0 \'bb\'f7\'d6\'d0\'b5\'c4\'b1\'be\'b5\'d8\'d7\'f8\'b1\'ea\'cf\'b5\'cd\'b3
\f1 \
open var localCoordinates: SCNVector3 \{ get \}\
\
\
 /// 
\f0 \'bb\'f7\'d6\'d0\'b5\'c4\'ca\'c0\'bd\'e7\'d7\'f8\'b1\'ea\'cf\'b5\'cd\'b3
\f1 \
open var worldCoordinates: SCNVector3 \{ get \}\
\
\
/// 
\f0 \'bb\'f7\'d6\'d0\'bd\'da\'b5\'e3\'b5\'c4\'b1\'be\'b5\'d8\'b7\'a8\'cf\'df\'d7\'f8\'b1\'ea
\f1 \
open var localNormal: SCNVector3 \{ get \}\
\
\
/// 
\f0 \'bb\'f7\'d6\'d0\'b5\'c4\'ca\'c0\'bd\'e7\'d7\'f8\'b1\'ea\'cf\'b5\'cd\'b3\'b5\'c4\'b7\'a8\'cf\'df\'d7\'f8\'b1\'ea
\f1 \
open var worldNormal: SCNVector3 \{ get \}\
\
\
/*! World transform of the node intersected. */\
open var modelTransform: SCNMatrix4 \{ get \}\
\
\
/*! The bone node hit. Only available if the node hit has a SCNSkinner attached. */\
@available(iOS 10.0, *)\
open var boneNode: SCNNode \{ get \}\
\
\
/*!\
 @method textureCoordinatesWithMappingChannel:\
 @abstract Returns the texture coordinates at the point of intersection, for a given mapping channel.\
 @param channel The texture coordinates source index of the geometry to use. The channel must exists on the geometry otherwise \{0,0\} will be returned.\
 */\
open func textureCoordinates(withMappingChannel channel: Int) -> CGPoint\
\}\

\f0 \'ce\'d2\'c3\'c7\'bf\'b4\'b3\'f6\'c0\'b4\'a3\'ac\'cd\'a8\'b9\'fd\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'bf\'c9\'d2\'d4\'bb\'f1\'c8\'a1\'b5\'c4\'d0\'c5\'cf\'a2\'bb\'b9\'ca\'c7\'c2\'f9\'b6\'e0\'b5\'c4
\f1 ,
\f0 \'b8\'f9\'be\'dd\'cf\'ee\'c4\'bf\'ca\'b5\'bc\'ca\'d0\'e8\'d2\'aa\'bd\'f8\'d0\'d0\'ca\'b9\'d3\'c3
\f1 !}